continue
params[:query].empty?
if "";
if ""
params[:query]
 if params[:query]
continue
params[:query]
params[query]
params
continue
params
continue
@response.class
@response["status"]
@response[:status]
n
@item.errors.full_messages
@item.errors
@item.save
@item
params
continue
class
n
continue
n
@attachment.instance
@attachment.instance.item
@attachment.instance
style_name
@attachment.class
@attachment.item
@attachment
most_appropriate_url
@attachment_options[:interpolator].class
@attachment_options[:interpolator]
@attachment_options[:interpolator].interpolate(most_appropriate_url, @attachment, style_name)
@attachment_options[:interpolator]
n
url
escape_url(url)
options[:escape]
url
n
options
@attachment_options[:interpolator].interpolate(most_appropriate_url, @attachment, style_name)
url
n
options
style_name
n
continue
@url_generator.for(style_name, default_options.merge(options))
n
default_options.class
default_options
options
default_style
style_name.class
style_name
n
@url_generator.for(style_name, default_options.merge(options))
n
@url_generator.for(style_name, default_options.merge(:timestamp => options))
style_name
n
@url_generator.for(style_name, default_options.merge(options))
style_name
n
@url_generator.for(style_name, default_options.merge(options))
n
@url_generator.for(style_name, default_options.merge(options))
item
@item
n
options.blank?
options == false 
options == true
options
@url_generator.for(style_name, default_options.merge(:timestamp => options))
n
picture.url(:thumb)
path.picture.url(:medium)
n
continue
@url_generator.for(style_name, default_options.merge(options))
@url_generator
n
@url_generator.class.class
@url_generator.class
@url_generator.instance_methods
@url_generator.methods
@url_generator.instance_methods
@url_generator.for(style_name, default_options.merge(options))
n
@url_generator.class
@url_generator
n
continue
n
@url_generator
n
options = true
continue
@url_generator.for(style_name, default_options.merge(options))
n
@url_generator
@url_generator.class
@url_generator
style_name
default_options.merge(options)
default_options.merge(options))
default_options
n
style_name
options
n
continue
n
continue
n
continue
params
continue
n
@user_profile
n
current_user
n
current_user
continue
@response
continue
@response.merge(images)
images
@response
continue
n
params[:image]
n
continue
params[:image]
params
continue
params[:image]
continue
params[:image][3]
params[:image].count
params[:image]
continue
n
continue
n
params
continue
created_image
created_images
n
item_image.empty?
n
continue
n
continue
n
continue
res.merge(images)
res
res[:item]= @item.as_json
res = {}
res[:item]= @item.as_json
@item.as_json.merge(images)
@item.to_hash.merge(images)
@item.merge(images)
@item.merger(images)
@item
images
n
continue
n
created_image
n
item_image.empty?
n
item
item_image
n
params
continue
n
params[:image]
n
params
continue
params[:item_image].count
params[:item_image]
params
continue
params
continue
params
continue
params
continue
params[:item_image]
params[:description]
params[:title]
params
continue
params
continue
params[:image].count
params
continue
params[:image]
params
continue
params
continue
params[:image]
params[:image].count
params[:image]
params
continue
params
continue
params
continue
params
continue
@item.errors.full_messages
n
continue
@item.errors.full_messages
@item
n
continue
items_params
@item.errors.full_messages
n
@item
n
items_params
continue
items_params
continue
@item
n
params
continue
@item
n
@item
n
continue
@item.errors
